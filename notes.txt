int pthread_create(pthread_t *thread, const pthread_attr_t *attr, void *(*start_routine)(void *), void *arg);
{
	pthread_create(&thread, NULL, thread_func, NULL);

	Parameter	Description:

	- &thread:	Pointer to a pthread_t variable — will hold the new thread’s ID
	- NULL:	Attributes for the thread (pass NULL for default attributes)
	- thread_func:	Function that the thread will run (must match void *(*)(void *) signature)
	- NULL:	Argument passed to the thread function (can be any pointer)
}

pthread_join(thread, NULL);==========================================================================
{
	int pthread_join(pthread_t thread, void **retval);

	Parameter	Description:
	- thread:	The thread to wait for
	- NULL:	You can pass a pointer to receive the thread’s return value (or NULL if unused)
}



nao esquecer:
- nomes variaveis
- norma
- flags Makefile


- routine()
- monitor_routine()
- assign_forks()